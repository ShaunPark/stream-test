/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */
plugins {
    id "com.github.davidmc24.gradle.plugin.avro" version "1.7.1"
    id 'application'
}

repositories {
    mavenCentral()

    maven {
        url "https://packages.confluent.io/maven"
    }
}

version = "0.0.1"
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation "org.slf4j:slf4j-simple:2.0.7"
    implementation "org.apache.kafka:kafka-clients:3.3.2"
    implementation "org.apache.kafka:kafka-streams:3.3.2"
    implementation 'io.confluent:kafka-streams-avro-serde:7.3.3'
    implementation 'io.confluent:kafka-schema-serializer:7.3.3'
    implementation 'io.confluent:kafka-avro-serializer:7.3.3'
    implementation 'io.confluent:kafka-schema-registry:7.3.3'
    implementation "org.apache.avro:avro:1.11.0"
    implementation "com.googlecode.json-simple:json-simple:1.1.1"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
        exceptionFormat = "full"
    }
}

application {
  mainClass.set("com.example.kstream.App")
}

jar {
  manifest {
    attributes(
      "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
      "Main-Class": "com.example.kstream.App"
    )
  }
}